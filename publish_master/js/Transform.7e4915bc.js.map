{"version":3,"sources":["webpack:///./src/views/common/Transform.vue","webpack:///./src/views/common/Transform.vue?1212","webpack:///./src/views/common/Transform.vue?8403"],"names":["defineComponent","name","props","token","type","String","required","target","shopCode","bindChannel","Number","setup","store","useStore","router","useRouter","wxUrl","computed","state","onMounted","sessionStorage","getItem","commit","setItem","axios","defaults","headers","url","test","navigator","userAgent","value","location","href","split","initWxOnReady","wxGetLocation","wxHideMenu","push","beforeRouteEnter","to","from","next","origin","fullPath","render"],"mappings":"kLACE,eAAW,O,4FCIEA,iBAAgB,CAC3BC,KAAM,YACNC,MAAO,CACHC,MAAO,CACHC,KAAMC,OACNC,UAAU,GAEdC,OAAQ,CACJH,KAAMC,OACNC,UAAU,GAEdE,SAAU,CACNJ,KAAMC,QAEVI,YAAa,CACTL,KAAMM,SAGdC,MAlB2B,SAkBrBT,GACF,IAAMU,EAAQC,iBACRC,EAASC,iBACTC,EAAQC,gBAAS,kBAAML,EAAMM,MAAMF,SA8BzC,OA7BAG,gBAAU,WAiBN,GAhBIC,eAAeC,QAAQ,UACvBT,EAAMU,OAAO,WAAYF,eAAeC,QAAQ,UAEhDnB,EAAMM,WACNI,EAAMU,OAAO,cAAepB,EAAMM,UAClCY,eAAeG,QAAQ,WAAYrB,EAAMM,WAEzCN,EAAMO,cACNG,EAAMU,OAAO,iBAAkBpB,EAAMO,aACrCW,eAAeG,QAAQ,cAAerB,EAAMO,YAAc,KAE1DP,EAAMC,QACNS,EAAMU,OAAO,WAAYpB,EAAMC,OAC/BiB,eAAeG,QAAQ,QAASrB,EAAMC,OACtCqB,OAAMC,SAASC,QAAQvB,MAAQD,EAAMC,OAErCD,EAAMK,OAAQ,CACd,IAAMoB,EAAM,0BAA0BC,KAAKC,UAAUC,WAE7Cd,EAAMe,MACRC,SAASC,KAAKC,MAAM,KAAK,GAC/BC,eAAcR,GAAK,WACfS,iBACAC,oBAEJvB,EAAOwB,KAAKpC,EAAMK,YAGnB,IAEXgC,iBArD2B,SAqDVC,EAAIC,EAAMC,GACvBtB,eAAeG,QAAQ,QAAvB,UAAmCS,SAASW,OAA5C,qBAA+DH,EAAGI,WAClEF,OCzDR,EAAOG,OAASA,EAED","file":"js/Transform.7e4915bc.js","sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport axios from '@/http'\r\nimport { initWxOnReady, wxGetLocation, wxHideMenu } from '@/plugins/Wx'\r\nimport { GlobalDataProps } from '@/store'\r\nimport { computed, defineComponent, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default defineComponent({\r\n  name: 'Transform',\r\n  props: {\r\n    token: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    target: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    shopCode: {\r\n      type: String\r\n    },\r\n    bindChannel: {\r\n      type: Number\r\n    }\r\n  },\r\n  setup(props) {\r\n    const store = useStore<GlobalDataProps>()\r\n    const router = useRouter()\r\n    const wxUrl = computed(() => store.state.wxUrl)\r\n    onMounted(() => {\r\n      if (sessionStorage.getItem('wxUrl')) {\r\n        store.commit('setWxUrl', sessionStorage.getItem('wxUrl'))\r\n      }\r\n      if (props.shopCode) {\r\n        store.commit('setShopCode', props.shopCode)\r\n        sessionStorage.setItem('shopCode', props.shopCode)\r\n      }\r\n      if (props.bindChannel) {\r\n        store.commit('setBindChannel', props.bindChannel)\r\n        sessionStorage.setItem('bindChannel', props.bindChannel + '')\r\n      }\r\n      if (props.token) {\r\n        store.commit('setToken', props.token)\r\n        sessionStorage.setItem('token', props.token)\r\n        axios.defaults.headers.token = props.token\r\n      }\r\n      if (props.target) {\r\n        const url: string = /(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)\r\n          ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            wxUrl.value!\r\n          : location.href.split('#')[0]\r\n\r\n        initWxOnReady(url, () => {\r\n          wxGetLocation()\r\n          wxHideMenu()\r\n        })\r\n\r\n        router.push(props.target)\r\n      }\r\n    })\r\n\r\n    return {}\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    sessionStorage.setItem(\r\n      'wxUrl',\r\n      `${location.origin}/HbsClient${to.fullPath}`\r\n    )\r\n    next()\r\n  }\r\n})\r\n</script>\r\n","import axios from '@/http';\r\nimport { initWxOnReady, wxGetLocation, wxHideMenu } from '@/plugins/Wx';\r\nimport { computed, defineComponent, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\nexport default defineComponent({\r\n    name: 'Transform',\r\n    props: {\r\n        token: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        target: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        shopCode: {\r\n            type: String\r\n        },\r\n        bindChannel: {\r\n            type: Number\r\n        }\r\n    },\r\n    setup(props) {\r\n        const store = useStore();\r\n        const router = useRouter();\r\n        const wxUrl = computed(() => store.state.wxUrl);\r\n        onMounted(() => {\r\n            if (sessionStorage.getItem('wxUrl')) {\r\n                store.commit('setWxUrl', sessionStorage.getItem('wxUrl'));\r\n            }\r\n            if (props.shopCode) {\r\n                store.commit('setShopCode', props.shopCode);\r\n                sessionStorage.setItem('shopCode', props.shopCode);\r\n            }\r\n            if (props.bindChannel) {\r\n                store.commit('setBindChannel', props.bindChannel);\r\n                sessionStorage.setItem('bindChannel', props.bindChannel + '');\r\n            }\r\n            if (props.token) {\r\n                store.commit('setToken', props.token);\r\n                sessionStorage.setItem('token', props.token);\r\n                axios.defaults.headers.token = props.token;\r\n            }\r\n            if (props.target) {\r\n                const url = /(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)\r\n                    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                        wxUrl.value\r\n                    : location.href.split('#')[0];\r\n                initWxOnReady(url, () => {\r\n                    wxGetLocation();\r\n                    wxHideMenu();\r\n                });\r\n                router.push(props.target);\r\n            }\r\n        });\r\n        return {};\r\n    },\r\n    beforeRouteEnter(to, from, next) {\r\n        sessionStorage.setItem('wxUrl', `${location.origin}/HbsClient${to.fullPath}`);\r\n        next();\r\n    }\r\n});\r\n","import { render } from \"./Transform.vue?vue&type=template&id=40ce25c9\"\nimport script from \"./Transform.vue?vue&type=script&lang=ts\"\nexport * from \"./Transform.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}